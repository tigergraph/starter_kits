CREATE QUERY people_with_key_positions_in_at_least_two_companies() 
  FOR GRAPH EnterpriseGraph API("v2") SYNTAX v2 {
/**
Find all the people who are a CEO, Director or Vice President in at least two different companies
*/

  SetAccum<edge> @@final_edge_set_4;
  SetAccum<edge> @@final_edge_set_5;
  SetAccum<vertex<Company>> @@final_vertex_set_1;
  SetAccum<vertex<Person>> @@final_vertex_set_2;
  SetAccum<vertex<Company>> @@final_vertex_set_3;

  vertex_set_1 = 
        SELECT c2
        FROM Person:alias_schema_2 -(WorkFor:alias_schema_4)- Company:c2,
             Person:alias_schema_2 -(WorkFor:alias_schema_5)- Company:c1
        WHERE (c2 != c1) AND 
              ((alias_schema_4.title == "CEO") OR ((alias_schema_4.title == "Director") OR (alias_schema_4.title == "Vice President"))) AND 
              ((alias_schema_5.title == "CEO") OR ((alias_schema_5.title == "Director") OR (alias_schema_5.title == "Vice President")))
        ACCUM @@final_edge_set_4 += alias_schema_4,
              @@final_edge_set_5 += alias_schema_5
        POST-ACCUM @@final_vertex_set_1 += c2
        POST-ACCUM @@final_vertex_set_2 += alias_schema_2
        POST-ACCUM @@final_vertex_set_3 += c1
        ;

  PRINT @@final_edge_set_4;

  PRINT @@final_edge_set_5;

  vertex_set_1 = { @@final_vertex_set_1 };
  PRINT vertex_set_1[
    vertex_set_1.registered_capital AS registered_capital
  ];

  vertex_set_2 = { @@final_vertex_set_2 };
  PRINT vertex_set_2[
    vertex_set_2.gender AS gender
  ];

  vertex_set_3 = { @@final_vertex_set_3 };
  PRINT vertex_set_3[
    vertex_set_3.registered_capital AS registered_capital
  ];

}
