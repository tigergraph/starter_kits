CREATE QUERY contact_when(vertex<Contact> contact, datetime time) FOR GRAPH MyGraph { 
  /*
  Sample input:
    contact: Chris-Xi
    datetime: 2019-06-05
  */
  
  typedef tuple <dtime datetime, attribute string, source string> updates;
  ListAccum<vertex> @@earliest_first;
  HeapAccum<updates>(1,dtime desc) @email_update;
  HeapAccum<updates>(1,dtime desc) @phone_update;
  HeapAccum<updates>(1,dtime desc) @title_update;

  Start = {contact};
  
  get_updates = SELECT t FROM Start:s-(wasUpdated:e)-ContactOnDate:t
               where t.modifiedDate <= time and s.outdegree("wasUpdated") > 1
               order by t.modifiedDate asc;
  
  print get_updates;
  
  updated_contacts = SELECT t FROM get_updates:s-(wasUpdated:e)-Contact:t
                     accum 
                          @@earliest_first += get_updates,
                          if s.email != "" then
                            t.@email_update += updates(s.modifiedDate,s.email,s.source)
                          end,
                          if s.phone != "" then
                            t.@phone_update += updates(s.modifiedDate,s.phone,s.source)
                          end,
                          if s.title != "" then
                            t.@title_update += updates(s.modifiedDate,s.title,s.source)
                          end;
  
  updated_contacts2 = SELECT t from get_updates:s-(wasUpdated:e)-Contact:t
                      post-accum
                      if get_updates.size() > 0 then
                      if t.@email_update.size() > 0 then
                          t.LastModifiedDate = t.@email_update.top().dtime,
                          t.LastModifiedByid = t.@email_update.top().source,
                          t.Email = t.@email_update.top().attribute,
                          t.Updated = true
                      end,
                      if t.@phone_update.size() > 0 then
                        if t.@phone_update.top().dtime > t.@email_update.top().dtime then
                          t.LastModifiedDate = t.@phone_update.top().dtime,
                          t.LastModifiedByid = t.@phone_update.top().source,
                          t.Phone = t.@phone_update.top().attribute,
                          t.Updated = true
                        else
                          t.Phone = t.@phone_update.top().attribute,
                          t.Updated = true 
                        end
                      end,
                      if t.@title_update.size() > 0 then
                        if t.@title_update.top().dtime > t.@email_update.top().dtime and t.@title_update.top().dtime > t.@phone_update.top().dtime then
                          t.LastModifiedDate = t.@title_update.top().dtime,
                          t.LastModifiedByid = t.@title_update.top().source,
                          t.Title = t.@title_update.top().attribute,
                          t.Updated = true
                        else
                          t.Title = t.@title_update.top().attribute,
                          t.Updated = true 
                        end 
                      end
                    end;
  
}