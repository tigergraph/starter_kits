CREATE QUERY k_hop_flagged(Vertex input, int k) FOR GRAPH MyGraph { 
	/***********************************************************
	 *  This is a query using v1 syntax. 
	 *  We start with a single vertex of one of these types:
	 *  Account / Payment / User 
	 *  and we want to find all the payment / device/ user
	 *  vertices with a trust-score lower than 0.1.
	 *  We also limit the number of total hops to k.
	 *
	 *  Sample Parameters:
	 *      input = payment1
	 *      k = 4 +
	 **********************************************************/
	
  SetAccum<VERTEX> @@warnings;	
	
	Start (ANY) = {INPUT};
	
	FOREACH i IN RANGE [1,k] DO 
	  Start = SELECT t FROM Start:s-((authenticated_by_num | reverse_authenticated_by_num | sets_up | reverse_sets_up | authenticated_by_email | reverse_authenticated_by_email | used_with | reverse_used_with | associated_with | reverse_associated_with | sends | reverse_sends | receives | reverse_receives | user_account_bank | reverse_user_account_bank | merchant_account_device | reverse_merchant_account_device | receives_pmnt | reverse_receives_pmnt | sends_pmnt | reverse_sends_pmnt | merchant_account_bank | reverse_merchant_account_bank):e)-:t
	          ACCUM 
	            IF t.trust_score < 0.1 AND (t.type == "device" OR t.type == "payment" OR t.type == "user") THEN
	              @@warnings += t
              END;
	END;

	Flagged = @@warnings;
	PRINT Flagged;
}