CREATE QUERY cc_subquery (VERTEX source, INT num_vert, INT maxhops) FOR GRAPH MyGraph RETURNS(FLOAT) SYNTAX V2 {
# Subquery returns closeness centrality for vertex source in graph with num_vert vertices 
        SumAccum<int> @@curr_dist, @@total_dist;
         OrAccum<bool> @visited;
 
# Initialize: Set the input vertex source as the starting point
        start = {source};
        start = SELECT s FROM start:s
                ACCUM s.@visited += true;
 
# total_dist = sum (distance between vertex s and all connected neighbors)
        WHILE (start.size() > 0) LIMIT maxhops DO    # explore up to (maxhops) hops FROM s
                @@curr_dist += 1;
                # Move FROM the current start set to the neighboring set of (unvisited) vertices
                start = SELECT t FROM start:s -(flight_to>:e)- :t
                        WHERE t.@visited == false AND t != s
                        POST-ACCUM t.@visited += true;
                                   @@total_dist += start.size() * @@curr_dist;
        END;
 
        IF @@total_dist > 0 THEN
                RETURN ((num_vert - 1) * 1.0) / (@@total_dist * 1.0);
        ELSE
                RETURN (-1.0);
        END;
 }