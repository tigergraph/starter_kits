CREATE QUERY shortest_ss_no_wt(VERTEX source, BOOL display) FOR GRAPH MyGraph SYNTAX V2 { 
 /* This query is Single-source_set Shortest Path without weights on edges. It calculates the shortest distance from the given vertex source_set to all other connected vertices, and shows one shortest path between them.   
The JSON version also show visualization of the network. 
The attribute version only store the distance into attribute, not the path.
*/

        MinAccum<int> @dis;
        OrAccum @visited;
        ListAccum<vertex> @path;
        SetAccum<edge> @@edge_set;

  ##### Initialization  #####
        source_set = {source};
        source_set = SELECT s 
                     FROM source_set:s
                     ACCUM s.@visited += true, 
                          s.@dis = 0,
                          s.@path = s; 
        result_set = {source};

  ##### Calculate distances and paths #####
        WHILE(source_set.size()>0) DO
                source_set = SELECT t
                         FROM source_set:s -(:e)- :t
                         WHERE t.@visited == false
                         ACCUM t.@dis += s.@dis + 1,
                               t.@path = s.@path + [t],
                               t.@visited += true;
                result_set = result_set UNION source_set;
        END;

  ##### Print the results #####

        PRINT result_set[result_set.@dis, result_set.@path];
        IF display THEN
                result_set = SELECT s
                            FROM result_set:s -(:e)- :t
                            ACCUM @@edge_set += e;
                PRINT @@edge_set;
        END;
}