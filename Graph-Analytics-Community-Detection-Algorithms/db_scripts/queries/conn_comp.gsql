CREATE QUERY conn_comp (STRING vertex_type, STRING edge_type, STRING rev_edge_type) 
        FOR GRAPH MyGraph SYNTAX V2 {
# This query identifies the Connected Components (undirected edges)

        MinAccum<int> @cc_id = 0;       //each vertex's tentative component id
        SumAccum<int> @old_id = 0;
        OrAccum<bool> @active;
        MapAccum<int, int> @@comp_sizes;
  
        start = {vertex_type};

# Initialize: Label each vertex with its own internal ID
        S = SELECT x 
            FROM start:x
            POST-ACCUM x.@cc_id = getvid(x),
                       x.@old_id = getvid(x)        
            ;

# Propagate smaller internal IDs until no more ID changes can be DOne
        WHILE (start.size()>0) DO
                start = SELECT t
                        FROM start:s -((edge_type|rev_edge_type):e)- :t
                        ACCUM t.@cc_id += s.@cc_id // If s has a smaller id than t, copy the id to t
                        POST-ACCUM
                                CASE WHEN t.@old_id != t.@cc_id THEN // If t's id has changed
                                        t.@old_id = t.@cc_id,
                                        t.@active = true
                                ELSE 
                                        t.@active = false
                                END
                        HAVING t.@active == true
                        ;
        END;

        start = {vertex_type};

        start = SELECT s FROM start:s
                POST-ACCUM @@comp_sizes += (s.@cc_id -> 1);
        PRINT @@comp_sizes;
        PRINT start [start.@cc_id];
}